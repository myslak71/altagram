---
version: "3"
services:
  altagram-web:
    build:
      context: .
      dockerfile: docker/dockerfiles/Dockerfile
    depends_on:
      - altagram-migrations
    env_file:
      - envs/dev.env
    command:
      - /bin/bash
      - -c
      - |
       python -m starships.crawler &&
       gunicorn -w 4 "starships.app:create_app()" --bind=0.0.0.0:7777
    container_name: altagram-web
    restart: on-failure
    healthcheck:
      test: curl http://localhost/starships/
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  altagram-db:
    image: postgres:13
    container_name: altagram-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=altagram
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  altagram-migrations:
    build:
      context: .
      dockerfile: docker/dockerfiles/Dockerfile-migrations
    depends_on:
      - altagram-db
    env_file:
      - envs/dev.env
    command: alembic upgrade head
    container_name: starships_migrations
    restart: on-failure
    healthcheck:
      test: psql -h localhost -U postgres -d altagram -c 'SELECT name FROM starships LIMIT 1`
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  altagram-nginx:
    container_name: altagram-nginx
    build: ./nginx
    ports:
      - "8000:8000"
    depends_on:
      - altagram-web
    restart: on-failure
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test: service nginx status
    volumes:
      - .:/code
